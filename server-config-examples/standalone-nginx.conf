
# Configuração de exemplo para Nginx - Site Standalone (Sem WordPress)
# Este arquivo deve ser colocado em /etc/nginx/sites-available/
# e ativado com: sudo ln -s /etc/nginx/sites-available/nome-do-arquivo.conf /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name urbis.com.br www.urbis.com.br;

    # Redirecionar HTTP para HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name urbis.com.br www.urbis.com.br;

    # Configurações SSL (Certbot pode adicionar estas linhas automaticamente)
    ssl_certificate /etc/letsencrypt/live/urbis.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/urbis.com.br/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Raiz do documento - onde seus arquivos do site estão armazenados
    root /var/www/urbis.com.br/html;
    index index.html;

    # Headers de segurança
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Configuração para o roteamento do React (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Servir arquivos estáticos com cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # Configuração para evitar acesso a arquivos ocultos
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Logs
    access_log /var/log/nginx/urbis.com.br.access.log;
    error_log /var/log/nginx/urbis.com.br.error.log;
}
